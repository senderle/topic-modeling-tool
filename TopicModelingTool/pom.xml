<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>cc.mallet.topic</groupId>
    <artifactId>TopicModelingTool</artifactId>
    <packaging>jar</packaging>
    <version>1.1</version>
    <name>Mallet Topic-Modeling-Tool GUI</name>
    <url>https://code.google.com/p/topic-modeling-tool/</url>
    <properties>
        <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
        <output.jar.name>TopicModelingTool</output.jar.name>
        <main-class>cc.mallet.topics.gui.TopicModelingToolGUI</main-class>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>7</maven.compiler.source>
        <maven.compiler.target>7</maven.compiler.target>
    </properties>
    <dependencies>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>cc.mallet</groupId>
            <artifactId>mallet</artifactId>
            <version>2.0.7</version>
        </dependency>
        <!-- TODO: Logging -->
    </dependencies>
    <build>

        <directory>target</directory>
        <outputDirectory>target/classes</outputDirectory>
      <!-- <finalName>${project.artifactId}-${project.version}</finalName> -->
        <finalName>${output.jar.name}</finalName>
        <testOutputDirectory>target/test-classes</testOutputDirectory>
        <!-- setting the source directory to a none maven default might cause problems -->
        <sourceDirectory>src/main/java</sourceDirectory>
        <scriptSourceDirectory>src</scriptSourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- include images for the GUI and CSS file for HTML generation in the 
                    class path -->
                <includes>
                    <include>**/*.png</include>
                    <include>**/*.jpg</include>
                    <include>**/*.gif</include>
                    <include>**/*.css</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <!-- As described here: http://stackoverflow.com/a/25374048/577088 ... Thanks Dave, whoever you are! -->
            <!-- Mallet logging is horrifically verbose, and is not easy to configure -->
            <!-- We have to use this complicated process to copy the logging.properties file to the right location -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${basedir}/target/classes/cc/mallet/util/resources
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/mallet-resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <configuration>
                    <!-- avoid the assembly id in the output name default  -->
                    <appendAssemblyId>false</appendAssemblyId>
                    <attach>false</attach>
                    <!-- set custom jar output names as defined by 'output.jar.name' including the version number  -->
                    <finalName>${output.jar.name}</finalName>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>${main-class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <!-- this is used for inheritance merges -->
                        <phase>package</phase>
                        <!-- append to the packaging phase. -->
                        <goals>
                            <goal>single</goal>
                            <!-- goals == mojos -->
                        </goals>
                    </execution>
                </executions>
            </plugin>

         <plugin>
            <groupId>com.zenjava</groupId>
            <artifactId>javafx-maven-plugin</artifactId>
            <version>8.6.0</version>
            <configuration>
                <mainClass>${main-class}</mainClass>
                <identifier>${output.jar.name}</identifier>
                <appName>${output.jar.name}</appName>
                <jfxMainAppJarName>TopicModelingTool.jar</jfxMainAppJarName>
                <verbose>true</verbose>
				<vendor>Upenn Libraries</vendor>
				<jvmArgs>
					<jvmArg>-Dfile.encoding=UTF-8</jvmArg>
				</jvmArgs>
            </configuration>
         </plugin>

        </plugins>
    </build>
</project>
